<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY owl2 "http://www.w3.org/2006/12/owl2#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY owl2xml "http://www.w3.org/2006/12/owl2-xml#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY daml "http://www.daml.org/2001/03/daml+oil#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY lkif-top "http://www.estrellaproject.org/lkif-core/lkif-top.owl#" >
    <!ENTITY mereo "http://www.estrellaproject.org/lkif-core/mereology.owl#" >
    <!ENTITY relative-places "http://www.estrellaproject.org/lkif-core/relative-places.owl#" >
]>


<rdf:RDF xmlns="http://www.estrellaproject.org/lkif-core/relative-places.owl#"
     xml:base="http://www.estrellaproject.org/lkif-core/relative-places.owl"
     xmlns:owl2xml="http://www.w3.org/2006/12/owl2-xml#"
     xmlns:lkif-top="http://www.estrellaproject.org/lkif-core/lkif-top.owl#"
     xmlns:mereo="http://www.estrellaproject.org/lkif-core/mereology.owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:relative-places="http://www.estrellaproject.org/lkif-core/relative-places.owl#"
     xmlns:owl2="http://www.w3.org/2006/12/owl2#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:daml="http://www.daml.org/2001/03/daml+oil#"
     xmlns:owl="http://www.w3.org/2002/07/owl#">
    <owl:Ontology rdf:about="">
        <owl:versionInfo rdf:datatype="&xsd;string"
            >LKIF Core, version 1.1, copyright (C) 2008, the ESTRELLA consortium</owl:versionInfo>
        <owl:versionInfo rdf:datatype="&xsd;string"
            >Partner contributions from the University of Amsterdam (UvA)

Editor:       Rinke Hoekstra (UvA)
Authors:      Rinke Hoekstra (UvA), Alexander Boer (UvA), Kasper van den Berg (UvA)
Contributors: Joost Breuker (UvA)</owl:versionInfo>
        <owl:versionInfo rdf:datatype="&xsd;string"
            >The LKIF-Core ontology, version 1.0, is part of Deliverable 1.4 of the European project for Standardised Transparent Representations in order to Extend Legal Accessibility (ESTRELLA, IST-2004-027665), http://www.estrellaproject.org

The use of this ontology, and the OWL files through which it is distributed, is covered by the GNU Lesser General Public License (LGPL), version 2.1 (http://www.gnu.org/copyleft/lesser.html) in as far as the copyright is not covered by additional restrictions of the ESTRELLA consortium agreement (info@estrellaproject.org). The LGPL license places copyright restrictions on the ontology itself but does not apply these restrictions to software that merely links with concepts defined in the ontology library. Please read the license restrictions before using this work.</owl:versionInfo>
        <owl:versionInfo rdf:datatype="&xsd;string"
            >This module is part of LKIF-Core, version 1.1, part of Deliverable 1.4 of ESTRELLA, IST-2004-027665</owl:versionInfo>
        <owl:imports rdf:resource="http://www.estrellaproject.org/lkif-core/mereology.owl"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.estrellaproject.org/lkif-core/mereology.owl#contained_in -->

    <owl:ObjectProperty rdf:about="&mereo;contained_in"/>
    


    <!-- http://www.estrellaproject.org/lkif-core/mereology.owl#part -->

    <owl:ObjectProperty rdf:about="&mereo;part"/>
    


    <!-- http://www.estrellaproject.org/lkif-core/mereology.owl#strict_part -->

    <owl:ObjectProperty rdf:about="&mereo;strict_part"/>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#abut -->

    <owl:ObjectProperty rdf:about="#abut">
        <rdf:type rdf:resource="&owl;SymmetricProperty"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Two places abut if they meet but do not partially coincide. NOTE: OWL 1.1: &#39;abut&#39; is irreflexive and disjoint with &#39;partially-coincide&#39;</rdfs:comment>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:range rdf:resource="#Place"/>
        <owl:inverseOf rdf:resource="#abut"/>
        <rdfs:subPropertyOf rdf:resource="#meet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#connect -->

    <owl:ObjectProperty rdf:about="#connect">
        <rdfs:comment rdf:datatype="&xsd;string"
            >Two places are connected if they are both relatively fixed and when they meet</rdfs:comment>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:range rdf:resource="#Place"/>
        <rdfs:subPropertyOf rdf:resource="#meet"/>
        <rdfs:subPropertyOf rdf:resource="#relatively_fixed"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#cover -->

    <owl:ObjectProperty rdf:about="#cover">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Definition cover:  cover(a, b) iff forall x:( meet(x, b) implies meet(x, a) )</rdfs:comment>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Specifies that two places cover eachother. Note: this cover-relation is the inverse of the COV relation described by Donnelly (2005)</rdfs:comment>
        <rdfs:comment rdf:datatype="&xsd;string"
            >To add in OWL 1.1: &#39;cover&#39; is reflexive, &#39;cover&#39; is transitive</rdfs:comment>
        <rdfs:range rdf:resource="#Place"/>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:subPropertyOf rdf:resource="#meet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#covered_by -->

    <owl:ObjectProperty rdf:about="#covered_by">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Specifies that two places cover eachother. To add in OWL 1.1: &#39;covered-by&#39; is reflexive, &#39;covered-by&#39; is transitive</rdfs:comment>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:range rdf:resource="#Place"/>
        <owl:inverseOf rdf:resource="#cover"/>
        <rdfs:subPropertyOf rdf:resource="#meet"/>
        <rdfs:subPropertyOf rdf:resource="#partially_coincide"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#exactly_coincide -->

    <owl:ObjectProperty rdf:about="#exactly_coincide">
        <rdf:type rdf:resource="&owl;SymmetricProperty"/>
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Definition exactly-coincide: exactly-coincide(a, b) iff forall x:( meet(x, a) iff meet(x, b) )</rdfs:comment>
        <rdfs:comment rdf:datatype="&xsd;string"
            >To add in OWL 1.1: &#39;exactly-coincide&#39; is reflexive, &#39;exactly-coincide&#39; is symetric, &#39;exactly-coincide&#39; is transitive</rdfs:comment>
        <rdfs:range rdf:resource="#Place"/>
        <rdfs:domain rdf:resource="#Place"/>
        <owl:inverseOf rdf:resource="#exactly_coincide"/>
        <rdfs:subPropertyOf rdf:resource="#meet"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#externally_connect -->

    <owl:ObjectProperty rdf:about="#externally_connect">
        <rdfs:comment rdf:datatype="&xsd;string"
            >Two places are externally connected if they are relatively fixed and abut, but do not overlap (OWL 1.1)</rdfs:comment>
        <rdfs:range rdf:resource="#Place"/>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:subPropertyOf rdf:resource="#abut"/>
        <rdfs:subPropertyOf rdf:resource="#connect"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#in -->

    <owl:ObjectProperty rdf:about="#in">
        <rdfs:comment rdf:datatype="&xsd;string"
            >The &#39;in&#39; property is used to express that one place is located (i.e. contained) within another place. It is therefore a mereological relation as well.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&mereo;contained_in"/>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:range rdf:resource="#Place"/>
        <rdfs:subPropertyOf rdf:resource="#spatial_relation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#location_complex -->

    <owl:ObjectProperty rdf:about="#location_complex">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <rdfs:range rdf:resource="#Location_Complex"/>
        <rdfs:domain rdf:resource="#Place"/>
        <owl:inverseOf rdf:resource="#location_complex_for"/>
        <rdfs:subPropertyOf rdf:resource="#spatial_relation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#location_complex_for -->

    <owl:ObjectProperty rdf:about="#location_complex_for">
        <rdf:type rdf:resource="&owl;InverseFunctionalProperty"/>
        <rdfs:domain rdf:resource="#Location_Complex"/>
        <rdfs:range rdf:resource="#Place"/>
        <rdfs:subPropertyOf rdf:resource="#spatial_relation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#meet -->

    <owl:ObjectProperty rdf:about="#meet">
        <rdf:type rdf:resource="&owl;SymmetricProperty"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Specifies that two places meet, but need not overlap or cover (reflexive)</rdfs:comment>
        <rdfs:comment rdf:datatype="&xsd;string"
            >To add in OWL 1.1: &#39;meet&#39; is equivalent with (&#39;abut&#39; union &#39;partially-coincide&#39;)</rdfs:comment>
        <rdfs:range rdf:resource="#Place"/>
        <rdfs:domain rdf:resource="#Place"/>
        <owl:inverseOf rdf:resource="#meet"/>
        <rdfs:subPropertyOf rdf:resource="#spatial_relation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#overlap -->

    <owl:ObjectProperty rdf:about="#overlap">
        <rdfs:comment rdf:datatype="&xsd;string"
            >Two places overlap if they are relatively fixed and partially coincide</rdfs:comment>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:range rdf:resource="#Place"/>
        <rdfs:subPropertyOf rdf:resource="#partially_coincide"/>
        <rdfs:subPropertyOf rdf:resource="#relatively_fixed"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#partially_coincide -->

    <owl:ObjectProperty rdf:about="#partially_coincide">
        <rdf:type rdf:resource="&owl;SymmetricProperty"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Definition partially-coincide: partially-coincide(a, b) iff exists x :( cover(a, x) and cover(b, x) )</rdfs:comment>
        <rdfs:comment rdf:datatype="&xsd;string"
            >To add in OWL 1.1: &#39;partially-coincide&#39; is reflexive, &#39;partially-coincide&#39; is disjoint with &#39;abut&#39;</rdfs:comment>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:range rdf:resource="#Place"/>
        <rdfs:subPropertyOf rdf:resource="#meet"/>
        <owl:inverseOf rdf:resource="#partially_coincide"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#relatively_fixed -->

    <owl:ObjectProperty rdf:about="#relatively_fixed">
        <rdf:type rdf:resource="&owl;SymmetricProperty"/>
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >NOTE: This cannot currently be expressed using OWL DL</rdfs:comment>
        <rdfs:comment rdf:datatype="&xsd;string"
            >Two places are relatively fixed if and only if either x and y have a common reference object or neither x nor y has a reference object</rdfs:comment>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:range rdf:resource="#Place"/>
        <owl:inverseOf rdf:resource="#relatively_fixed"/>
        <rdfs:subPropertyOf rdf:resource="#spatial_relation"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#spatial_reference -->

    <owl:ObjectProperty rdf:about="#spatial_reference">
        <rdfs:comment rdf:datatype="&xsd;string"
            >The reference to an object determines the relative place.</rdfs:comment>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:subPropertyOf rdf:resource="#spatial_relation"/>
        <rdfs:range rdf:resource="&owl;Thing"/>
    </owl:ObjectProperty>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#spatial_relation -->

    <owl:ObjectProperty rdf:about="#spatial_relation">
        <rdfs:comment rdf:datatype="&xsd;string"
            >A spatial relation is a relation between two places</rdfs:comment>
        <rdfs:domain rdf:resource="#Place"/>
        <rdfs:range rdf:resource="#Place"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.estrellaproject.org/lkif-core/lkif-top.owl#Spatio_Temporal_Occurrence -->

    <owl:Class rdf:about="&lkif-top;Spatio_Temporal_Occurrence"/>
    


    <!-- http://www.estrellaproject.org/lkif-core/mereology.owl#Atom -->

    <owl:Class rdf:about="&mereo;Atom">
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&mereo;part"/>
                <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">0</owl:cardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
    </owl:Class>
    


    <!-- http://www.estrellaproject.org/lkif-core/mereology.owl#Composition -->

    <owl:Class rdf:about="&mereo;Composition">
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&mereo;strict_part"/>
                <owl:onClass rdf:resource="&mereo;Part"/>
                <owl:minCardinality rdf:datatype="&xsd;nonNegativeInteger">2</owl:minCardinality>
            </owl:Restriction>
        </rdfs:subClassOf>
    </owl:Class>
    


    <!-- http://www.estrellaproject.org/lkif-core/mereology.owl#Part -->

    <owl:Class rdf:about="&mereo;Part"/>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#Absolute_Place -->

    <owl:Class rdf:about="#Absolute_Place">
        <rdfs:subClassOf rdf:resource="#Place"/>
        <owl:disjointWith rdf:resource="#Relative_Place"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >An absolute place is defined without reference to other places.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#Comprehensive_Place -->

    <owl:Class rdf:about="#Comprehensive_Place">
        <rdfs:subClassOf rdf:resource="#Location_Complex"/>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A place is comprehensive if it always covers every place (and thus also every location-complex) and every object.</rdfs:comment>
        <rdfs:comment rdf:datatype="&xsd;string"
            >NOTE: definition requires OWL 1.1 semantics</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#Location_Complex -->

    <owl:Class rdf:about="#Location_Complex">
        <owl:equivalentClass>
            <owl:Restriction>
                <owl:onProperty rdf:resource="#location_complex_for"/>
                <owl:someValuesFrom rdf:resource="#Place"/>
            </owl:Restriction>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="#Place"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="#location_complex_for"/>
                <owl:allValuesFrom rdf:resource="#Place"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A location complex is a relatively stable complex of places referred to as one: it is the maximal collection of places with the same reference object.</rdfs:comment>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A location complex only overlaps its own parts (OWL 1.1)</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#Place -->

    <owl:Class rdf:about="#Place">
        <owl:equivalentClass>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="#Absolute_Place"/>
                    <rdf:Description rdf:about="#Relative_Place"/>
                </owl:unionOf>
            </owl:Class>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="&lkif-top;Spatio_Temporal_Occurrence"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="#location_complex"/>
                <owl:someValuesFrom rdf:resource="#Location_Complex"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="#location_complex"/>
                <owl:allValuesFrom rdf:resource="#Location_Complex"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A place is a spatio-temporal-occurrence</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.estrellaproject.org/lkif-core/relative-places.owl#Relative_Place -->

    <owl:Class rdf:about="#Relative_Place">
        <rdfs:subClassOf rdf:resource="#Place"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="#spatial_reference"/>
                <owl:someValuesFrom rdf:resource="&owl;Thing"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string"
            >A relative place is defined by some reference to some object/thing</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.w3.org/2002/07/owl#Thing -->

    <owl:Class rdf:about="&owl;Thing"/>
</rdf:RDF>
